import getPercents from "../../utils/getPercents.js"

describe("Неверные значения для первого аргумента", () => {
  it("Значение меньше 0", () => {
    expect(getPercents(-1, 200)).toBe("Первое значение должно быть числом больше 0 (невключительно) и меньше 100 (включительно).");
  }),
  it("Значение больше 100", () => {
    expect(getPercents(101, 200)).toBe("Первое значение должно быть числом больше 0 (невключительно) и меньше 100 (включительно).");
  }),
  it("Значение NaN", () => {
    expect(getPercents(NaN, 200)).toBe("Первое значение должно быть числом больше 0 (невключительно) и меньше 100 (включительно).");
  }),
  it("Булево значение", () => {
    expect(getPercents(true, 200)).toBe("Первое значение должно быть числом больше 0 (невключительно) и меньше 100 (включительно).");
  }),
  it("Значение является строкой", () => {
    expect(getPercents("Это не число", 200)).toBe("Первое значение должно быть числом больше 0 (невключительно) и меньше 100 (включительно).");
  })
});

describe("Неверные значения для второго аргумента", () => {
  it("Значение NaN", () => {
    expect(getPercents(30, NaN)).toBe("Второе значение должно быть числом.");
  })
  it("Булево значение", () => {
    expect(getPercents(30, false)).toBe("Второе значение должно быть числом.");
  })
  it("Значение является строкой", () => {
    expect(getPercents(30, "Это не число")).toBe("Второе значение должно быть числом.");
  })
});

describe("Вычисления при верных значениях аргументов", () => {
  it("Целые значения", () => {
    expect(getPercents(30, 200)).toBe(60);
  })
  it("Дробные значения", () => {
    expect(getPercents(30.5, 200.3)).toBe(61.0915);
  })
});